----case statement



--LOOPS

-- BASIC LOOP
DECLARE
VAR_1 NUMBER(3) :=10;
BEGIN
LOOP
DBMS_OUTPUT.PUT_LINE('THE CURRENT VALUE IS = ' || VAR_1);
VAR_1:=VAR_1+10;
 IF VAR_1>50 THEN
    EXIT;
    END IF;
END LOOP;
DBMS_OUTPUT.PUT_LINE('THE FINAL VALUE IS = ' || VAR_1);
END;
--

DECLARE
VAR_1 NUMBER(3) :=10;
BEGIN
LOOP
DBMS_OUTPUT.PUT_LINE('THE CURRENT VALUE IS = ' || VAR_1);
VAR_1:=VAR_1+10;

    EXIT WHEN VAR_1=50;
END LOOP;
DBMS_OUTPUT.PUT_LINE('THE FINAL VALUE IS = ' || VAR_1);
END;

--while loop

DECLARE
VAR_1 NUMBER(3) :=10;
BEGIN
WHILE (VAR_1)<100
LOOP
DBMS_OUTPUT.PUT_LINE('THE CURRENT VALUE IS =' || VAR_1);
VAR_1 :=VAR_1+10;
EXIT WHEN VAR_1=60;

END LOOP;
END;

-- FOR LOOP
DECLARE
VAR_1 NUMBER(2);
BEGIN
FOR VAR_1 IN 10..15
LOOP
DBMS_OUTPUT.PUT_LINE('THE CURRENT VALUE IS =' || VAR_1);
END LOOP;
END;

DECLARE
VAR_1 NUMBER(2);
BEGIN
FOR VAR_1 IN REVERSE 10..15
LOOP
DBMS_OUTPUT.PUT_LINE('THE CURRENT VALUE IS =' || VAR_1);
END LOOP;
END;


DECLARE
VAR_1 NUMBER(2);
BEGIN
FOR VAR_1 IN REVERSE 10..15
LOOP
DBMS_OUTPUT.PUT_LINE('THE CURRENT VALUE IS =' || VAR_1);
END LOOP;
END;

--table of 5 using for loop
DECLARE
VAR_1 NUMBER(2);
BEGIN
FOR VAR_1 IN 1..10
LOOP
DBMS_OUTPUT.PUT_LINE('THE CURRENT VALUE IS =' || 5*VAR_1);
END LOOP;
END;

--reverse table of 5 using for loop
DECLARE
VAR_1 NUMBER(2);
BEGIN
FOR VAR_1 IN REVERSE 1..10
LOOP
DBMS_OUTPUT.PUT_LINE('THE CURRENT VALUE IS =' || 5*VAR_1);
END LOOP;
END;

--CHECK EVEN OR ODD

DECLARE
NUM1 NUMBER(2):=5;
BEGIN
IF MOD(NUM1,2)=0 THEN
DBMS_OUTPUT.PUT_LINE('THE NUM IS EVEN =' || NUM1);

ELSE

DBMS_OUTPUT.PUT_LINE('THE NUM IS ODD =' || NUM1);
END IF;
END;

--TAKING INPUT FROM USER HW

DECLARE NUM1 NUMBER(2);
NUM1:= &NUM1';
BEGIN
IF MOD(NUM1,2)=0 THEN
DBMS_OUTPUT.PUT_LINE('THE NUM IS EVEN =' || NUM1);
ELSE

DBMS_OUTPUT.PUT_LINE('THE NUM IS ODD =' || NUM1);
END IF;
END;
